{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-js-authentication-laravel\\\\reactjs\\\\src\\\\components\\\\Comunicado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AuthUser from './AuthUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comunicado() {\n  _s();\n\n  const {\n    http\n  } = AuthUser();\n  const [comunicados, setComunicados] = useState([]);\n  const [descripcion, setDescripcion] = useState('');\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    fetchComunicados();\n  }, []);\n\n  const fetchComunicados = () => {\n    http.get('/comunicados').then(response => {\n      setComunicados(response.data.comunicados);\n    }).catch(error => {\n      console.error('Error al obtener los comunicados:', error);\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (editId) {\n      // Si editId está definido, estamos editando un comunicado existente\n      try {\n        const updatedComunicado = {\n          descripcion: descripcion\n        };\n        await http.put(`/comunicados/${editId}`, updatedComunicado);\n        setEditId(null); // Limpiar el modo de edición\n\n        setDescripcion(''); // Limpiar el campo de descripción\n\n        fetchComunicados(); // Actualizar la lista de comunicados\n      } catch (error) {\n        console.error('Error al editar el comunicado:', error);\n      }\n    } else {\n      // Si editId no está definido, estamos creando un nuevo comunicado\n      const newComunicado = {\n        descripcion: descripcion\n      };\n\n      try {\n        // Enviar el nuevo comunicado al servidor\n        await http.post('/comunicados', newComunicado); // Limpiar el campo de descripción después de enviar\n\n        setDescripcion(''); // Actualizar la lista de comunicados\n\n        fetchComunicados();\n      } catch (error) {\n        console.error('Error al crear el comunicado:', error);\n      }\n    }\n  };\n\n  const handleEdit = (id, descripcion) => {\n    // Establecer el modo de edición y cargar la descripción del comunicado\n    setEditId(id);\n    setDescripcion(descripcion);\n  };\n\n  const handleCancelEdit = () => {\n    // Cancelar el modo de edición y limpiar la descripción\n    setEditId(null);\n    setDescripcion('');\n  };\n\n  const handleDelete = async id => {\n    try {\n      // Enviar una solicitud para eliminar el comunicado por ID\n      await http.delete(`/comunicados/${id}`); // Actualizar la lista de comunicados después de eliminar\n\n      fetchComunicados();\n    } catch (error) {\n      console.error('Error al eliminar el comunicado:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear/Editar Comunicado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descripci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: descripcion,\n          onChange: e => setDescripcion(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), editId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Editar Comunicado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelEdit,\n          children: \"Cancelar Edici\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear Comunicado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comunicados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comunicados.map(comunicado => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [comunicado.descripcion, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(comunicado.id, comunicado.descripcion),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(comunicado.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, comunicado.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comunicado, \"DK/NUvOmPx2l6JjjwR5M7Vk5GkI=\");\n\n_c = Comunicado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comunicado\");","map":{"version":3,"sources":["C:/xampp/htdocs/react-js-authentication-laravel/reactjs/src/components/Comunicado.js"],"names":["React","useState","useEffect","AuthUser","Comunicado","http","comunicados","setComunicados","descripcion","setDescripcion","editId","setEditId","fetchComunicados","get","then","response","data","catch","error","console","handleSubmit","e","preventDefault","updatedComunicado","put","newComunicado","post","handleEdit","id","handleCancelEdit","handleDelete","delete","target","value","map","comunicado"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AuthUser from './AuthUser';\r\n\r\nexport default function Comunicado() {\r\n    const { http } = AuthUser();\r\n    const [comunicados, setComunicados] = useState([]);\r\n    const [descripcion, setDescripcion] = useState('');\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchComunicados();\r\n    }, []);\r\n\r\n    const fetchComunicados = () => {\r\n        http.get('/comunicados')\r\n            .then((response) => {\r\n                setComunicados(response.data.comunicados);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener los comunicados:', error);\r\n            });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (editId) {\r\n            // Si editId está definido, estamos editando un comunicado existente\r\n            try {\r\n                const updatedComunicado = {\r\n                    descripcion: descripcion,\r\n                };\r\n                await http.put(`/comunicados/${editId}`, updatedComunicado);\r\n                setEditId(null); // Limpiar el modo de edición\r\n                setDescripcion(''); // Limpiar el campo de descripción\r\n                fetchComunicados(); // Actualizar la lista de comunicados\r\n            } catch (error) {\r\n                console.error('Error al editar el comunicado:', error);\r\n            }\r\n        } else {\r\n            // Si editId no está definido, estamos creando un nuevo comunicado\r\n            const newComunicado = {\r\n                descripcion: descripcion,\r\n            };\r\n\r\n            try {\r\n                // Enviar el nuevo comunicado al servidor\r\n                await http.post('/comunicados', newComunicado);\r\n                // Limpiar el campo de descripción después de enviar\r\n                setDescripcion('');\r\n                // Actualizar la lista de comunicados\r\n                fetchComunicados();\r\n            } catch (error) {\r\n                console.error('Error al crear el comunicado:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id, descripcion) => {\r\n        // Establecer el modo de edición y cargar la descripción del comunicado\r\n        setEditId(id);\r\n        setDescripcion(descripcion);\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        // Cancelar el modo de edición y limpiar la descripción\r\n        setEditId(null);\r\n        setDescripcion('');\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            // Enviar una solicitud para eliminar el comunicado por ID\r\n            await http.delete(`/comunicados/${id}`);\r\n            // Actualizar la lista de comunicados después de eliminar\r\n            fetchComunicados();\r\n        } catch (error) {\r\n            console.error('Error al eliminar el comunicado:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Crear/Editar Comunicado</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Descripción:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={descripcion}\r\n                        onChange={(e) => setDescripcion(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                {editId ? (\r\n                    <div>\r\n                        <button type=\"submit\">Editar Comunicado</button>\r\n                        <button type=\"button\" onClick={handleCancelEdit}>Cancelar Edición</button>\r\n                    </div>\r\n                ) : (\r\n                    <button type=\"submit\">Crear Comunicado</button>\r\n                )}\r\n            </form>\r\n\r\n            <h2>Comunicados</h2>\r\n            <ul>\r\n                {comunicados.map((comunicado) => (\r\n                    <li key={comunicado.id}>\r\n                        {comunicado.descripcion}\r\n                        <button onClick={() => handleEdit(comunicado.id, comunicado.descripcion)}>Editar</button>\r\n                        <button onClick={() => handleDelete(comunicado.id)}>Eliminar</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}