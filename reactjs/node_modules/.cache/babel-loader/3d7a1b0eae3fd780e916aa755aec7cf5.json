{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-js-authentication-laravel\\\\reactjs\\\\src\\\\components\\\\dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AuthUser from './AuthUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const {\n    http,\n    setToken\n  } = AuthUser();\n  const [nombre, setNombre] = useState('');\n  const [fechaHora, setFechaHora] = useState('');\n  const [barbero, setBarbero] = useState('');\n  const [error, setError] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [reservas, setReservas] = useState([]); // Estado para almacenar las reservas\n\n  useEffect(() => {\n    http.get('/users').then(response => {\n      const barberUsers = response.data.users.filter(user => user.rol === 'barbero');\n      setUsers(barberUsers);\n    }).catch(error => {\n      console.error('Error al obtener la lista de usuarios:', error);\n    });\n  }, []); // Función para manejar la solicitud de reservas por fecha\n\n  const handleGetReservasByDate = async () => {\n    try {\n      const response = await http.get(`/reservas?fecha=${selectedDate}`);\n      setReservas(response.data.reservas);\n    } catch (error) {\n      console.error('Error al obtener las reservas:', error);\n      alert('Error al obtener las reservas. Por favor, inténtalo de nuevo.'); // Configura el mensaje de error\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Código para crear una nueva reserva\n\n    try {\n      await http.post(`/reservas`, newReserva);\n      setNombre('');\n      setFechaHora('');\n      setBarbero('');\n      setError('');\n    } catch (error) {\n      console.error('Error al crear la reserva:', error);\n      alert('Ya existe una reserva para esta hora y este barbero.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reserva tu corte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha de consulta de reservas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleGetReservasByDate,\n          children: \"Consultar Reservas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Barbero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear Reserva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reservas para la fecha seleccionada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reservas.map(reserva => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [reserva.nombre, \" - \", reserva.fecha_hora, \" - \", reserva.barbero]\n      }, reserva.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"Fi8/RZqiRkjDqIF4yZuj0jGLzvI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/xampp/htdocs/react-js-authentication-laravel/reactjs/src/components/dashboard.js"],"names":["React","useEffect","useState","axios","AuthUser","Home","users","setUsers","http","setToken","nombre","setNombre","fechaHora","setFechaHora","barbero","setBarbero","error","setError","selectedDate","setSelectedDate","reservas","setReservas","get","then","response","barberUsers","data","filter","user","rol","catch","console","handleGetReservasByDate","alert","handleSubmit","e","preventDefault","post","newReserva","target","value","map","reserva","fecha_hora","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport AuthUser from './AuthUser';\r\n\r\nexport default function Home() {\r\n    const [users, setUsers] = useState([]);\r\n    const { http, setToken } = AuthUser();\r\n    const [nombre, setNombre] = useState('');\r\n    const [fechaHora, setFechaHora] = useState('');\r\n    const [barbero, setBarbero] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [reservas, setReservas] = useState([]); // Estado para almacenar las reservas\r\n\r\n    useEffect(() => {\r\n        http.get('/users')\r\n            .then(response => {\r\n                const barberUsers = response.data.users.filter(user => user.rol === 'barbero');\r\n                setUsers(barberUsers);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error al obtener la lista de usuarios:', error);\r\n            });\r\n    }, []);\r\n\r\n    // Función para manejar la solicitud de reservas por fecha\r\n    const handleGetReservasByDate = async () => {\r\n        try {\r\n            const response = await http.get(`/reservas?fecha=${selectedDate}`);\r\n            setReservas(response.data.reservas);\r\n        } catch (error) {\r\n            console.error('Error al obtener las reservas:', error);\r\n            alert('Error al obtener las reservas. Por favor, inténtalo de nuevo.'); // Configura el mensaje de error\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Código para crear una nueva reserva\r\n\r\n        try {\r\n            await http.post(`/reservas`, newReserva);\r\n            setNombre('');\r\n            setFechaHora('');\r\n            setBarbero('');\r\n            setError('');\r\n        } catch (error) {\r\n            console.error('Error al crear la reserva:', error);\r\n            alert('Ya existe una reserva para esta hora y este barbero.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Reserva tu corte</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Nombre:</label>\r\n                    {/* Campos de entrada de nombre, fecha y barbero */}\r\n                </div>\r\n                <div>\r\n                    <label>Fecha de consulta de reservas:</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={selectedDate}\r\n                        onChange={(e) => setSelectedDate(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"button\" onClick={handleGetReservasByDate}>Consultar Reservas</button>\r\n                </div>\r\n                <div>\r\n                    <label>Barbero:</label>\r\n                    {/* Selector de barbero */}\r\n                </div>\r\n                <button type=\"submit\">Crear Reserva</button>\r\n            </form>\r\n           \r\n            {/* Mostrar las reservas obtenidas */}\r\n            <h3>Reservas para la fecha seleccionada:</h3>\r\n            <ul>\r\n                {reservas.map(reserva => (\r\n                    <li key={reserva.id}>\r\n                        {reserva.nombre} - {reserva.fecha_hora} - {reserva.barbero}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}